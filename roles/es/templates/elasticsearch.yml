# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please see the documentation for further information on configuration options:
# <http://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration.html>
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
# cluster.name: my-application
#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
# node.name: node-1
#
# Add custom attributes to the node:
#
# node.rack: r1
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
# path.data: /path/to/data
#
# Path to log files:
#
# path.logs: /path/to/logs
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
# bootstrap.mlockall: true
#
# Make sure that the `ES_HEAP_SIZE` environment variable is set to about half the memory
# available on the system and that the owner of the process is allowed to use this limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
#
# network.host: 192.168.0.1
#
# Set a custom port for HTTP:
#
# http.port: 9200
#
# For more information, see the documentation at:
# <http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html>
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when new node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
# discovery.zen.ping.unicast.hosts: ["host1", "host2"]
#
# Prevent the "split brain" by configuring the majority of nodes (total number of nodes / 2 + 1):
#
# discovery.zen.minimum_master_nodes: 3
#
# For more information, see the documentation at:
# <http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery.html>
#
# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
# gateway.recover_after_nodes: 3
#
# For more information, see the documentation at:
# <http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-gateway.html>
#
# ---------------------------------- Various -----------------------------------
#
# Disable starting multiple nodes on a single system:
#
# node.max_local_storage_nodes: 1
#
# Require explicit names when deleting indices:
#
# action.destructive_requires_name: true
 cluster.name : elasticsearch
 
 node.name : "{{ansible_nodename}}"
 
 node.master : true

 node.data : true

 index.number_of_shards : 10

 network.host : 0.0.0.0

 http.port : 9200

 bootstrap.mlockall: true

 index.refresh_interval : 1s

 discovery.zen.publish_timeout : 2s

 http.compression : true

 index.max_result_window : 1000000000

 index.number_of_replicas : 1

 index.codec : best_compression

 catenate_numbers : true

 catenate_all : true

 catenate_words : true

 max_num_segments : 1

 indices.memory.index_buffer_size : 25%

 indices.fielddata.cache.size : 30%

 indices.breaker.fielddata.limit : 35%

 index.cache.field.max_size : 50000

 index.cache.field.type : soft

 transport.tcp.port : 9300

 discovery.zen.ping.unicast.hosts : ["{{discovery_ip1}}:9300","{{discovery_ip2}}:9300"]

 index.store.type: niofs

 indices.recovery.concurrent_streams: 8

 http.cors.enabled: true

 threadpool.index.type: fixed

 threadpool.index.size: 24

 threadpool.index.queue_size: 1000

 threadpool.search.size: 64

 threadpool.search.type: fixed

 threadpool.search.queue_size: 1000

 threadpool.get.type: fixed

 threadpool.get.size: 32

 threadpool.get.queue_size: 1000

 threadpool.bulk.type: fixed

 threadpool.bulk.size: 32

 threadpool.bulk.queue_size: 1000

 index.merge.scheduler.max_thread_count: 8

 index.translog.flush_threshold_size: 600MB
 
 index.translog.flush_threshold_ops: 500000
